@model List<Bookify.ViewModels.UserVM.UserVM>
@{
    Layout = "~/Views/Shared/NewLayout.cshtml";
    ViewData["Title"] = "Manage Users";
    var selectedRole = ViewBag.SelectedRole as string;
    var roles = ViewBag.Roles as List<string>;
    var search = ViewBag.Search as string;
}

<link rel="stylesheet" href="/css/Users/Users.css" />
<link rel="stylesheet" href="https://unpkg.com/aos@2.3.1/dist/aos.css" />

<div class="user-container">
    <div class="user-inner-box">
        <div class="user-body-bg">
            <h2 class="mb-4 text-center fw-bold text-success" data-aos="fade-down">Manage Users</h2>

            <div class="mb-4 d-flex gap-2 flex-wrap" data-aos="fade-right">
                <input type="text" id="searchInput" placeholder="Search by username..." class="form-control w-auto flex-grow-1" oninput="filterUsers()" value="@search" />
                <select id="roleSelect" class="form-select w-auto" onchange="filterUsers()">
                    <option value="">All Roles</option>
                    @foreach (var role in roles)
                    {
                        <option value="@role" selected="@(role == selectedRole)">@role</option>
                    }
                </select>
            </div>

            <div class="table-container" data-aos="fade-up">
                <table class="table table-hover table-bordered align-middle">
                    <thead class="table-success">
                        <tr class="text-center">
                            <th>User Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="userTableBody">
                        @if (Model != null && Model.Any())
                        {
                            foreach (var user in Model)
                            {
                                <tr data-username="@user.UserName.ToLower()" data-role="@user.Role">
                                    <td>@user.UserName</td>
                                    <td>@user.Email</td>
                                    <td>@user.Role</td>
                                    <td class="text-center">
                                        <div class="d-flex justify-content-center gap-2">
                                            <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-outline-primary btn-sm">Edit</a>
                                            <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center text-muted py-4">
                                    <div data-aos="zoom-in">
                                        <i class="bi bi-person-x display-6"></i>
                                        <p class="mt-2 mb-0">No users found.</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
<script>
    AOS.init({ duration: 300, easing: 'ease-in-out', once: true });

    function filterUsers() {
        const searchInput = document.getElementById("searchInput").value.toLowerCase();
        const roleFilter = document.getElementById("roleSelect").value;
        const rows = document.querySelectorAll("#userTableBody tr");

        rows.forEach(row => {
            const username = row.getAttribute("data-username");
            const role = row.getAttribute("data-role");
            const matchSearch = username.includes(searchInput);
            const matchRole = !roleFilter || role === roleFilter;
            row.style.display = matchSearch && matchRole ? "" : "none";
        });
    }
</script>